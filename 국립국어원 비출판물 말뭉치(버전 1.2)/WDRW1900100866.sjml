<?xml version="1.0" encoding="UTF-8"?>
<SJML>
    <header>
        <fileInfo>
            <fileId>WDRW1900100866</fileId>
            <annoLevel>원시</annoLevel>
            <category>비출판물 > 감상문</category>
        </fileInfo>
        <sourceInfo>
            <title>튜링 머신</title>
            <author id="P00866" age="23" occupation="대학생/대학원생" sex="M" submission="온라인" handwriting="No">정재훈</author>
        </sourceInfo>
    </header>
    <text date="20200000" subclass="null_튜링 머신">
        <p>튜링 머신은 저장 장소에 하나의 셀을 만들어 심볼을 저장하고 읽고 쓰기 헤더가 그 셀의 심볼을 사람이 만든 함수에 맞춰 읽고 심볼을 바꾸기도 하고 읽는 순서를 바꾸기도 한다. 그러면서 사람이 원하는 값에 가까워지고 더 이상의 정의된 함수가 없어 멈추거나, 모든 함수를 끝내고 값을 내어 끝을 낸다. 튜링 머신은 하나의 종합 기계의 역할을 하였는 데, 승인기나 간단한 변환기의 역할은 너무나 쉽고 간단한 측면이 있었다. 하지만 그것에서 멈추지 않고 다른 강력한 수식을 처리하는 변환기로서의 역할과 현재의 컴퓨터의 프로그래밍 언어처럼 연계가 가능하고,  경우에 따라 나뉠 수 있다는 것이 하나의 처리장치로서 역할을 제대로 한다는 것이 무엇인지 생각했다. 나의 생각에는 계산기가 진화하여 모든 역할을 하는 컴퓨터처럼 컴퓨터가 되어가는 과정 중의 첫 걸을 걷는 역할을 했다고 본다. 앨런 튜링은 튜링 명제에서 이 기계가 모든 기계적으로 수행할 수 있는 모든 계산을 수행할 수 있다고 했다.이 명제에 따르면 이 기계는 현재의 컴퓨터만큼 강력한 것이다. 사실 이 명제가 완벽하게 증명된 것은 아니다. 더 어려운 문제를 풀어야하고 그만큼 시간이 걸리기 때문이다. 하지만 참고에 따르면 튜링 머신을 완벽하게 쓰고 증명하는 것이 문제가 아니라고 본다. 튜링 머신은 컴퓨터 과학의 뉴턴 법칙처럼 그럴듯한 모델을 제안했다는 것이다. 이 모델을 기본으로 다른 물리법칙들과 새로운 사실들이 늘어나는 것처럼 튜링 머신을 기초로 다른 기계들과 프로그래밍 언어들, 많은 부수적인 것들이 나타난 것이다. 나의 능력이 부족하여 모든 예제를 풀고 생각할 순 없었지만, 이 머신은 튜링의 말처럼 정말 모든 기계적인 수식을 풀어 줄 수 있을 것 같았다. 마치 컴퓨터를 마주보는 느낌이었다. 그리고 이 머신은 하나의 프로그래밍이라는 것이다. 우리가 알고 있는 수식을 알고리즘을 만들어, 즉 기계의 언어로 변환하여 입력하면 그것을 이 기계가 변환과 출력을 통해 나타내는 현재의 컴퓨터와 다를 것이 없다는 것이다. 물론 튜링 머신은 '하나의 작업'만을 할 수 있는 간단하고 기초적인 기계일 수 밖에 없지만 연결하여 다른 복잡한 것도 이룰 수 있는 가능성이 무한한 기계이다. 하나의 머리 속의 정의를 시각화하는 기계같았다. 이 기세의 발전이라면 충분히 다른 하나의 인간과 동급의 기계가 출현할 것이라고 생각한다.</p>
    </text>
</SJML>